name: CI
on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

env:
  RAILS_ENV: test
  CI: "true"
  RUBYOPT: "-W0"
  SECRET_KEY_BASE: "secret_key_base"
  PARALLEL_WORKERS: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        test: [test, system]
        include:
          - test: test
            command: test
          - test: system
            command: test:system

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - uses: nanasess/setup-chromedriver@master
        if: matrix.test == 'system'

      - name: Setup fonts
        if: matrix.test == 'system'
        run: |
          sudo apt-get update -y
          sudo apt-get install ttf-mscorefonts-installer
          sudo fc-cache -f -v

      - uses: actions/setup-node@v2.4.1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: bin/rails webpacker:compile

      - name: Setup database
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          bundle exec rake db:test:prepare

      - name: Run tests
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          bundle exec rails ${{ matrix.command }}

      - uses: actions/upload-artifact@v2
        if: matrix.test == 'system'
        with:
          path: tmp/screenshots
          name: test-screenshots

      - uses: actions/upload-artifact@v2
        if: matrix.test == 'system'
        with:
          path: test/reports
          name: test-reports
